version: '3.8'
services:
  # nginx:
  #   container_name: reverse_proxy
  #   restart: always
  #   image: nginx:1.19.7
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - target: 80
  #       published: 80
  #       protocol: tcp
  #       mode: host
  #   depends_on:
  #     - flask
  #     - db
  #     - rdb
  #     - client

  flask:
    container_name: flask
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - '4001:3000'
    volumes:
      - .:/code
    depends_on:
      - db
      - rdb
    env_file:
      - .dev.env

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile.client
      target: dev
    ports:
      - '5000:5000'
      - '35729:35729'
    volumes:
      - ./client:/usr/src/app
    depends_on:
      - flask

  db:
    container_name: db
    image: 'postgres:13'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=snakes
      - POSTGRES_DB=flask-app

  rdb:
    container_name: rdb
    image: 'redis:alpine'
    volumes:
      - redis-data:/var/lib/redis
    ports:
      - 6379:6379
    # networks:
    #   node_net:
    #     ipv4_address: 172.28.1.4

# networks:
#   node_net:
#     ipam:
#       driver: default
#       config:
#         - subnet: 172.28.0.0/16

volumes:
  postgres_data:
  redis-data:
